{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","team","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","data","setData","_useState5","_useState6","teams","setTeams","_useState7","_useState8","players","setPlayers","_useState9","_useState10","events","setEvents","_useState11","_useState12","dreamteam","setDreamteam","_useState13","_useState14","playerSearch","setPlayerSearch","_useState15","_useState16","position","setPosition","_useState17","_useState18","teamName","setTeamName","_useState19","_useState20","priceValue","setPriceValue","_useState21","_useState22","formValue","setFormValue","_useState23","_useState24","seasonValue","setSeasonValue","_useState25","_useState26","selectedPlayer","setSelectedPlayer","_useState27","_useState28","selectedTeam","_useState29","_useState30","selectedTeamCost","setSelectedTeamCost","_useState31","_useState32","selectedTeamCount","setSelectedTeamCount","BootstrapDialog","styled","Dialog","_ref","theme","& .MuiDialogContent-root","padding","spacing","& .MuiDialogActions-root","_React$useState","React","_React$useState2","open","setOpen","handleClose","_React$useState3","_React$useState4","openSelected","setOpenSelected","handleCloseSelected","teamNames","positions","id","priceRange","min","max","formRange","seasonRange","mostCaptained","mostSelected","topPerformer","listCounter","list","counts","forEach","e","undefined","getFullName","params","concat","row","first_name","second_name","getPriceFromCostInt","now_cost","toFixed","getTeamName","find","code","team_code","name","getPositionName","pos","element_type","buildPlayerList","console","log","length","result","player","push","web_name","number","parseInt","form","color","numberColor","nameColor","useEffect","fetch","then","response","json","elements","filter","in_dreamteam","finally","react","className","Box","sx","display","CssBaseline","AppBar","width","ml","Drawer","flexShrink","& .MuiDrawer-paper","boxSizing","p","variant","anchor","Toolbar","Typography","noWrap","component","Divider","List","mc","ms","tp","event","most_captained","most_selected","top_element","captainCount","selectedCount","performerCount","Number","value_season","newValue","count","parseFloat","setupFilters","FormControl","m","gutterBottom","TextField","value","onChange","target","Select","split","input","OutlinedInput","label","renderValue","selected","flexWrap","gap","map","Chip","key","MenuItem","multiple","Slider","getAriaLabel","valueLabelDisplay","getAriaValueText","step","marks","Button","onClick","filteredPlayers","normalize","replace","toLowerCase","includes","teamCodes","fp","some","tc","applyFilters","onClose","aria-labelledby","index_es","size","pattern","homeTeam","squad","gk","df","cm","fw","DialogActions","autoFocus","playerIndex","indexOf","splice","teamCounter","costCounter","positionCounter","t","alert","addRemovePlayer","DataGrid","disableColumnMenu","height","rows","columns","field","headerName","valueGetter","flex","renderCell","type","columnVisibilityModel","full_name","initialState","sorting","sortModel","components","Footer","justifyContent","bgcolor","border","borderColor","borderRadius","onRowClick","& .selected","backgroundColor","sort","getCellClassName","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_default","a","createElement","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7a312ee3.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { DataGrid, GridColDef, gridColumnLookupSelector, gridTabIndexColumnHeaderSelector } from '@mui/x-data-grid';\nimport SoccerLineUp from 'react-soccer-lineup'\n\nimport { styled } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Slider from '@mui/material/Slider'\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport Typography from '@mui/material/Typography';\nimport Chip from '@mui/material/Chip';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [teams, setTeams] = useState(null);\n  const [players, setPlayers] = useState(null);\n  const [events, setEvents] = useState(null);\n  const [dreamteam, setDreamteam] = useState(null);\n\n  const [playerSearch, setPlayerSearch] = useState('');\n  const [position, setPosition] = useState([]);\n  const [teamName, setTeamName] = useState([]);\n  const [priceValue, setPriceValue] = useState([0, 20]);\n  const [formValue, setFormValue] = useState([-5, 30]);\n  const [seasonValue, setSeasonValue] = useState([-5, 30]);\n\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [selectedTeam, setSelectedTeam] = useState([]);\n\n  const [selectedTeamCost, setSelectedTeamCost] = useState(0);\n  const [selectedTeamCount, setSelectedTeamCount] = useState(0);\n\n  const handlePlayerSearchChange = (event) => {\n    const { target: { value }, } = event;\n    setPlayerSearch(value);\n  };\n  const handlePositionChange = (event) => {\n    const { target: { value }, } = event;\n    setPosition(typeof value === 'string' ? value.split(',') : value,);\n  };\n  const handleTeamChange = (event) => {\n    const { target: { value }, } = event;\n    setTeamName(typeof value === 'string' ? value.split(',') : value,);\n  };\n  function valuePriceFormatter(value) {\n    return `${value} M`;\n  }\n  const handlePriceChange = (event, newValue) => {\n    setPriceValue(newValue);\n  };\n  const handleFormChange = (event, newValue) => {\n    setFormValue(newValue);\n  };\n  const handleSeasonValueChange = (event, newValue) => {\n    setSeasonValue(newValue);\n  };\n  const handleRowClick = (params) => {\n    console.log(params);\n    setSelectedPlayer(params.row);\n  };\n\n  const drawerWidth = 200;\n\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    '& .MuiDialogContent-root': {\n      padding: theme.spacing(2),\n    },\n    '& .MuiDialogActions-root': {\n      padding: theme.spacing(1),\n    },\n  }));\n  \n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const [openSelected, setOpenSelected] = React.useState(false);\n  const handleClickOpenSelected = () => {\n    setOpenSelected(true);\n  };\n  const handleCloseSelected = () => {\n    setOpenSelected(false);\n  };\n  var teamNames = []\n  const positions = [{ id: 1, position: 'GK' }, { id: 2, position: 'DF' }, { id: 3, position: 'MF' }, { id: 4, position: 'FW' }]\n  var priceRange = { min: 0, max: 0 }\n  var formRange = { min: 0.0, max: 0.0 }\n  var seasonRange = { min: 0.0, max: 0.0 }\n  var mostCaptained = []\n  var mostSelected = []\n  var topPerformer = []\n\n  useEffect(() => {\n    //fetch('data.json', { headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' } })\n    fetch('https://fantasy.premierleague.com/api/bootstrap-static/')\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        setTeams(data.teams);\n        setPlayers(data.elements);\n        setEvents(data.events);\n        setDreamteam(data.elements.filter(player => player.in_dreamteam));\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  function listCounter(list) {\n    let counts = {}\n    list.forEach((e) => {\n      if (counts[e] === undefined) {\n        counts[e] = 0\n      }\n      counts[e] += 1\n    })\n    return counts;\n  }\n\n  function setupFilters(teams, events, players) {\n    teams.forEach((team) => {\n      teamNames.push({ code: team.code, name: team.name })\n    })\n\n    let mc = []\n    let ms = []\n    let tp = []\n    events.forEach((event) => {\n      mc.push(event.most_captained);\n      ms.push(event.most_selected);\n      tp.push(event.top_element);\n    })\n    let captainCount = listCounter(mc);\n    let selectedCount = listCounter(ms);\n    let performerCount = listCounter(tp);\n\n    players.forEach((player) => {\n      // PRICE\n      if (player.now_cost > priceRange.max) {\n        priceRange.max = player.now_cost;\n      }\n      if (player.now_cost < priceRange.min || priceRange.min === 0) {\n        priceRange.min = player.now_cost\n      }\n\n      // FORM\n      if (Number(player.form) > formRange.max) {\n        formRange.max = Number(player.form)\n      }\n      if (Number(player.form) < formRange.min || formRange.min === 0) {\n        formRange.min = Number(player.form)\n      }\n\n      // VALUE\n      if (Number(player.value_season) > seasonRange.max) {\n        seasonRange.max = Number(player.value_season)\n      }\n      if (Number(player.value_season) < seasonRange.min || seasonRange.min === 0) {\n        seasonRange.min = Number(player.value_season)\n      }\n\n      // CAPTAINED\n      if (captainCount[player.id] !== undefined) {\n        let newValue = { id: player.id, name: player.web_name, count: captainCount[player.id] };\n        mostCaptained.push(newValue);\n      }\n\n      // SELECTED\n      if (selectedCount[player.id] !== undefined) {\n        let newValue = { id: player.id, name: player.web_name, count: selectedCount[player.id] };\n        mostSelected.push(newValue);\n      }\n\n      // TOP PERFORMER\n      if (performerCount[player.id] !== undefined) {\n        let newValue = { id: player.id, name: player.web_name, count: performerCount[player.id] };\n        topPerformer.push(newValue);\n      }\n    })\n    \n    priceRange.min = parseFloat((priceRange.min / 10).toFixed(1));\n    priceRange.max = parseFloat((priceRange.max / 10).toFixed(1));\n  }\n\n  \n  // Players have 3 'name' fields to try and display, the safest way to do this is to combine\n  // the first and second names, and display the 'shirt' name in another column\n  function getFullName(params) {\n    return `${params.row.first_name || ''} ${params.row.second_name || ''}`;\n  };\n\n\n  // The 'now_cost' value that is saved is an int, so 12.4 would be stored as 124.\n  // We need to convert this to the actual price shown in FPL.\n  function getPriceFromCostInt(params) {\n    return (params.row.now_cost / 10).toFixed(1);\n  }\n\n\n  // As the player information only provide the team code\n  // We need to use that to find the team name to display.\n  function getTeamName(params) {\n    let result = teams.find((team) => {\n      return team.code === params.row.team_code;\n    })\n    return result.name;\n  }\n\n  // As the position information is held as an enum\n  // We need to use that to find the correct position \n  function getPositionName(params) {\n    let result = positions.find((pos) => {\n      return pos.id === params.row.element_type;\n    })\n    return result.position;\n  }\n\n  function applyFilters(){\n    let filteredPlayers = data.elements;\n    // Player name\n    if (playerSearch !== null && playerSearch !== ''){\n      filteredPlayers = filteredPlayers.filter(player => \n        player.web_name.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\").toLowerCase().includes(playerSearch.toLowerCase()) || \n        player.first_name.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\").toLowerCase().includes(playerSearch.toLowerCase()) ||\n        player.second_name.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\").toLowerCase().includes(playerSearch.toLowerCase()));\n    }\n    // Team\n    if (teamName.length > 0){\n      let teamCodes = teamNames.filter(team => teamName.includes(team.name));\n      filteredPlayers = filteredPlayers.filter((fp) => {\n        return teamCodes.some((tc) => {\n          return tc.code === fp.team_code;\n        });\n      });\n    }\n    // Position\n    if (position.length > 0){\n      let pos = positions.filter(pos => position.includes(pos.position));\n      filteredPlayers = filteredPlayers.filter((fp) => {\n        return pos.some((p) => {\n          return p.id === fp.element_type;\n        });\n      });\n    }\n    // Price\n    if (priceValue[0] > priceRange.min || priceValue[1] < priceRange.max){\n      filteredPlayers = filteredPlayers.filter(player => \n        parseFloat((player.now_cost / 10).toFixed(1)) >= priceValue[0] &&\n        parseFloat((player.now_cost / 10).toFixed(1)) <= priceValue[1]\n      );\n    }\n    // Form\n    if (formValue[0] > formRange.min || formValue[1] < formRange.max){\n      filteredPlayers = filteredPlayers.filter(player => \n        player.form >= formValue[0] &&\n        player.form <= formValue[1]\n      );\n    }\n    // Season Value\n    if (seasonValue[0] > seasonRange.min || seasonValue[1] < seasonRange.max){\n      filteredPlayers = filteredPlayers.filter(player => \n        player.value_season >= seasonValue[0] &&\n        player.value_season <= seasonValue[1]\n      );\n    }\n\n    setPlayers(filteredPlayers);\n  }\n\n  function clearFilters(){\n    setPlayerSearch('');\n    setPosition([]);\n    setTeamName([]);\n    setPriceValue([0, 20]);\n    setFormValue([-5, 30]);\n    setSeasonValue([-5, 30]);\n    setPlayers(data.elements);\n  }\n\n    // the positions are set up with an id that corresponds with the 'element_type' field for players.\n  // 1 = Goalkeeper, 2 = Defender, 3 = Midfielder, 4 = Forward\n  function setupTeam(team) {\n    let goalkeeper = team.find(player => player.element_type === 1);\n    let gk = buildPlayerList(goalkeeper);\n\n    let defenders = team.filter(player => player.element_type === 2);\n    let df = buildPlayerList(defenders);\n\n    let midfielders = team.filter(player => player.element_type === 3);\n    let cm = buildPlayerList(midfielders);\n\n    let forwards = team.filter(player => player.element_type === 4);\n    let fw = buildPlayerList(forwards);\n\n    let squad = { \"squad\": { gk, df, cm, fw } };\n    return squad; \n  }\n\n  function buildPlayerList(players) {\n    if (typeof players !== 'undefined') {\n      console.log(players)\n      if (players.length > 1) {\n        let result = []\n        players.forEach(player => result.push({ \"name\": player.web_name + \" (\" + (player.now_cost / 10).toFixed(1) + \"M)\", \"number\": parseInt(player.form), \"color\": \"#87CEEB\", \"numberColor\": \"#333\", \"nameColor\": \"#333\" }));\n        return result;\n      }\n      else {\n        return { \"name\": players.web_name + \" (\" + (players.now_cost / 10).toFixed(1) + \"M)\", \"number\": parseInt(players.form), \"color\": \"#87CEEB\", \"numberColor\": \"#333\", \"nameColor\": \"#333\" };\n      }\n    }\n    else{\n      return []\n    }\n  }\n\n  function addRemovePlayer() {\n    let player = selectedPlayer;\n    let playerIndex = selectedTeam.indexOf(player);\n    if (playerIndex >= 0){\n      selectedTeam.splice(playerIndex,1);\n      console.log('Player removed from team.');\n    }\n    else{\n      selectedTeam.push(player);\n      // No more than 3 players from each team\n      // Warn/Highlight if over 100m is spent\n      // No more than 2 GK, 5 DF, 5 MF, 3 FW in a single team\n      // Warn how many players/positions are needed to complete team\n      let teamCounter = [];\n      let costCounter = 0;\n      let positionCounter = [];\n      selectedTeam.forEach(p => {\n        teamCounter.push(p.team);\n        if (teamCounter.filter(t => t === p.team).length > 3){\n          alert('Too many players selected from ' + p.teamName);\n          selectedTeam.splice(selectedTeam.indexOf(player),1);\n        }\n        costCounter += parseFloat((p.now_cost / 10).toFixed(1));\n        if (costCounter >= 100){\n          alert('Team cost is over £100m, current team selection costs: £' + costCounter);\n        }\n        positionCounter.push(p.element_type); \n        if (p.element_type === 1 && positionCounter.filter(pos => pos === p.element_type).length > 2){\n          alert('Max number of GK\\'s selected');\n          selectedTeam.splice(selectedTeam.indexOf(player),1);\n        }\n        else if (p.element_type === 2 && positionCounter.filter(pos => pos === p.element_type).length > 5){\n          alert('Max number of DF\\'s selected');\n          selectedTeam.splice(selectedTeam.indexOf(player),1);\n        }\n        else if (p.element_type === 3 && positionCounter.filter(pos => pos === p.element_type).length > 5){\n          alert('Max number of MF\\'s selected');\n          selectedTeam.splice(selectedTeam.indexOf(player),1);\n        }\n        else if (p.element_type === 4 && positionCounter.filter(pos => pos === p.element_type).length > 3){\n          alert('Max number of FW\\'s selected');\n          selectedTeam.splice(selectedTeam.indexOf(player),1);\n        }\n      })\n\n      setSelectedTeamCost(costCounter);\n      setSelectedTeamCount(selectedTeam.length)\n\n    }\n  }\n\n  function CustomFooter() {\n    return (\n      <Box sx={{ p: 1, \n        display: 'flex',  \n        justifyContent: 'space-evenly'}}>\n        <Box sx={{ p: 1, \n        bgcolor: (selectedTeamCost >= 100 ? '#FF450080' : 'white'),\n        border: '1px solid',\n        borderColor: 'lightgrey',\n        borderRadius: 2}}>Total Cost: £{selectedTeamCost}m</Box>\n        <Box sx={{ p: 1, \n        border: '1px solid',\n        borderColor: 'lightgrey',\n        borderRadius: 2}}>Total Players Selected: {selectedTeamCount}/15</Box>\n      </Box>\n    );\n  }\n\n  // This is what is displayed in the application.\n  return (\n    <div className=\"App\">\n      {loading}\n      {data &&\n        <Box sx={{ display: 'flex' }}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            sx={{ width: `calc(100% - ${drawerWidth}px)`, ml: `${drawerWidth}px` }}\n          >\n          </AppBar>\n          <Drawer\n            sx={{\n              width: drawerWidth,\n              flexShrink: 0,\n              '& .MuiDrawer-paper': {\n                width: drawerWidth,\n                boxSizing: 'border-box',\n                p: 1\n              },\n            }}\n            variant=\"permanent\"\n            anchor=\"left\"\n          >\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap component=\"div\">\n                Filters\n              </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n              {setupFilters(teams, events, players)}\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Typography id=\"input-slider\" gutterBottom>\n                  Player search\n                </Typography>\n                <TextField\n                  id=\"outlined-basic\" \n                  variant=\"outlined\"\n                  value={playerSearch}\n                  onChange={handlePlayerSearchChange} />\n              </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Typography id=\"input-slider\" gutterBottom>\n                  Position\n                </Typography>\n                <Select\n                  value={position}\n                  onChange={handlePositionChange}\n                  input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value} label={value} />\n                      ))}\n                    </Box>\n                  )}\n                >\n                  {positions.map((position) => (\n                    <MenuItem\n                      key={position.id}\n                      value={position.position}\n                    >\n                      {position.position}\n                    </MenuItem>\n                  ))}\n                </Select>\n                </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Typography id=\"input-slider\" gutterBottom>\n                  Teams\n                </Typography>\n                <Select\n                  multiple\n                  value={teamName}\n                  onChange={handleTeamChange}\n                  input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map((value) => (\n                        <Chip key={value} label={value} />\n                      ))}\n                    </Box>\n                  )}\n                >\n                  {teamNames.map((team) => (\n                    <MenuItem\n                      key={team.code}\n                      value={team.name}\n                    >\n                      {team.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n                </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Typography id=\"input-slider\" gutterBottom>\n                  Price\n                </Typography>\n                <Slider\n                  getAriaLabel={() => 'Price range'}\n                  value={priceValue}\n                  onChange={handlePriceChange}\n                  valueLabelDisplay=\"auto\"\n                  getAriaValueText={valuePriceFormatter}\n                  min={priceRange.min}\n                  max={priceRange.max}\n                  step={0.1}\n                  marks={[{value: priceRange.min, label: priceRange.min}, {value: priceRange.max, label: priceRange.max}]}\n                />\n              </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Typography id=\"input-slider\" gutterBottom>\n                  Form\n                </Typography>\n                <Slider\n                  getAriaLabel={() => 'Form range'}\n                  value={formValue}\n                  onChange={handleFormChange}\n                  valueLabelDisplay=\"auto\"\n                  min={formRange.min}\n                  max={formRange.max}\n                  step={0.1}\n                  marks={[{value: formRange.min, label: formRange.min}, {value: formRange.max, label: formRange.max}]}\n                />\n              </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Typography id=\"input-slider\" gutterBottom>\n                  Season Value\n                </Typography>\n                <Slider\n                  getAriaLabel={() => 'Season Value range'}\n                  value={seasonValue}\n                  onChange={handleSeasonValueChange}\n                  valueLabelDisplay=\"auto\"\n                  min={seasonRange.min}\n                  max={seasonRange.max}\n                  step={0.1}\n                  marks={[{value: seasonRange.min, label: seasonRange.min}, {value: seasonRange.max, label: seasonRange.max}]}\n                />\n              </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Divider sx={{ p: 1 }} />\n                <Button variant=\"contained\"\n                  onClick={() => {\n                    applyFilters();\n                  }}>Apply Filters</Button>\n              </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Button variant=\"contained\"\n                  onClick={() => {\n                    clearFilters();\n                  }}>Clear Filters</Button>\n              </FormControl>\n              <FormControl  sx={{ m: 0.4, width: '150px' }}>\n              <Divider sx={{ p: 1 }} />  \n                <Button variant=\"contained\" onClick={handleClickOpen}>\n                  View Dream Team\n                </Button>\n                <BootstrapDialog\n                  onClose={handleClose}\n                  aria-labelledby=\"customized-dialog-title\"\n                  open={open}\n                >\n                  <SoccerLineUp\n                    size={ \"small\" }\n                    color={ \"#66FF00\" }\n                    pattern={ \"lines\" }\n                    homeTeam={setupTeam(dreamteam)}\n                  />\n                  <DialogActions>\n                    <Button autoFocus onClick={handleClose}>\n                      Exit\n                    </Button>\n                  </DialogActions>\n                </BootstrapDialog>\n              </FormControl>\n              <FormControl sx={{ m: 0.4, width: '150px' }}>\n                <Button variant=\"contained\"\n                  onClick={() => {\n                    addRemovePlayer();\n                  }}>Add/Remove Player</Button>\n              </FormControl>\n              <FormControl  sx={{ m: 0.4, width: '150px' }}>\n                <Button variant=\"contained\" onClick={handleClickOpenSelected}>\n                  View Selected Team\n                </Button>\n                <BootstrapDialog\n                  onClose={handleCloseSelected}\n                  aria-labelledby=\"customized-dialog-title\"\n                  open={openSelected}\n                >\n                <Box sx={{ display: 'flex' }}>\n                  <DataGrid\n                    disableColumnMenu\n                    sx={{ m: 0.4, height: '80vh', width: '8000px'}}\n                    rows={selectedTeam}\n                    columns={[\n                      { field: 'first_name' },\n                      { field: 'second_name' },\n                      { field: 'full_name', headerName: 'Full Name', valueGetter: getFullName, flex: 2 },\n                      { field: 'web_name', headerName: 'Name', flex: 2, renderCell: (params) => (\n                        <div>\n                          <Typography>{params.row.web_name}</Typography>\n                          <Typography variant=\"caption\">{params.row.first_name || ''} {params.row.second_name || ''}</Typography>\n                        </div>\n                      ) },\n                      { field: 'element_type', headerName: 'Position', valueGetter: getPositionName, flex: 1 },\n                      { field: 'team_code', headerName: 'Team Name', valueGetter: getTeamName, flex: 1 },\n                      { field: 'now_cost', headerName: 'Cost', type: 'number', valueGetter: getPriceFromCostInt, flex: 1 },\n                      { field: 'form', headerName: 'Form', type: 'number', flex: 1 },\n\n                      { field: 'goals_scored', headerName: 'Goals', type: 'number', flex: 1 },\n                      { field: 'assists', headerName: 'Assists', type: 'number', flex: 1 },\n                      { field: 'clean_sheets', headerName: 'Clean Sheets', type: 'number', flex: 1 },\n                    ]}\n                    columnVisibilityModel={{\n                      full_name: false,\n                      first_name: false,\n                      second_name: false\n                    }}\n                    initialState={{\n                      sorting: {\n                        sortModel: [{ field: 'element_type'}],\n                      },\n                    }}\n                    components={{\n                      Footer: CustomFooter\n                    }}\n                  />\n                </Box>\n                  <DialogActions>\n                    <Button autoFocus onClick={handleCloseSelected}>\n                      Exit\n                    </Button>\n                  </DialogActions>\n                </BootstrapDialog>\n              </FormControl>\n            </List>\n          </Drawer>\n          <DataGrid\n            disableColumnMenu\n            onRowClick={handleRowClick}\n            sx={{ m: 0.4, \n              height: '99vh',\n              '& .selected': {\n                backgroundColor: '#d2ffb991',\n                color: '#5b5b5b',\n              }}}\n            rows={players}\n            columns={[\n              { field: 'first_name' },\n              { field: 'second_name' },\n              { field: 'full_name', headerName: 'Full Name', valueGetter: getFullName, flex: 1 },\n              { field: 'web_name', headerName: 'Name', flex: 1, renderCell: (params) => (\n                <div>\n                  <Typography>{params.row.web_name}</Typography>\n                  <Typography variant=\"caption\">{params.row.first_name || ''} {params.row.second_name || ''}</Typography>\n                </div>\n              ) },\n              { field: 'element_type', headerName: 'Position', valueGetter: getPositionName, flex: 0.5 },\n              { field: 'team_code', headerName: 'Team', valueGetter: getTeamName, flex: 0.5 },\n              { field: 'now_cost', headerName: 'Cost', type: 'number', valueGetter: getPriceFromCostInt, flex: 0.5 },\n              { field: 'form', headerName: 'Form', type: 'number', flex: 0.5 },\n              { field: 'value_form', headerName: 'Value Form', type: 'number', flex: 0.5 },\n              { field: 'value_season', headerName: 'Value Season', type: 'number', flex: 0.5 },\n              { field: 'points_per_game', headerName: 'Points Per Game', type: 'number', flex: 0.5 },\n\n              { field: 'goals_scored', headerName: 'Goals', type: 'number', flex: 0.5 },\n              { field: 'assists', headerName: 'Assists', type: 'number', flex: 0.5 },\n              { field: 'clean_sheets', headerName: 'Clean Sheets', type: 'number', flex: 0.5 },\n\n              //{ field: 'chance_of_playing_next_round', headerName: '% Chance of Playing Next', type: 'number', flex: 0.5 },\n              // Above field removed due to inconsistencies of the data - some had the 100% value expected, others were blank/null\n              { field: 'transfers_in_event', headerName: 'Transfers In', type: 'number', flex: 0.5 },\n              { field: 'transfers_out_event', headerName: 'Transfers Out', type: 'number', flex: 0.5 },\n              { field: 'selected_by_percent', headerName: '% Selected', type: 'number', flex: 0.5 },\n              { field: 'dreamteam_count', headerName: 'No Times in Dreamteam', type: 'number', flex: 0.5 },\n              // These ranks are the overall rank across all positions,\n              // need to work with the data to display it per position instead for it to be useful.\n              {field: 'influence_rank', headerName: 'Influence Rank', type: 'number', flex:0.5},    \n              {field: 'creativity_rank', headerName: 'Creativity Rank', type: 'number', flex:0.5},    \n              {field: 'threat_rank', headerName: 'Threat Rank', type: 'number', flex:0.5},    \n              {field: 'ict_index_rank', headerName: 'ICT Rank', type: 'number', flex:0.5}\n            ]}\n            columnVisibilityModel={{\n              full_name: false,\n              first_name: false,\n              second_name: false\n            }}\n            initialState={{\n              sorting: {\n                sortModel: [{ field: 'form', sort: 'desc' }],\n              },\n            }}\n            getCellClassName={(params) => {\n              if (selectedTeam.indexOf(params.row) >= 0) {\n                return 'selected';\n              }\n            }}\n          />\n        </Box>\n      }\n\n    </div>\n  );\n\n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}